package Services;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;

import Models.*;
public class AccountService {
	static Connection connect = ConnectDB.getConnection();
	public static void insertUser(User user) {
		String sql = "INSERT INTO users(name, password, email, phone, address, role) VALUES(?,?,?,?,?,?)";
		try {
			
			PreparedStatement pst = connect.prepareStatement(sql);
			pst.setString(1, user.getName());
			pst.setString(2, user.getPassword());
			pst.setString(3, user.getEmail());
			pst.setString(4, user.getPhone());
			pst.setString(5, user.getAddress());
			pst.setString(6, user.getRole());
			pst.executeUpdate();
			pst.close();
			connect.close();
		} catch (SQLException e) {
			System.out.println("Error: " + e);
		}
	}
	public static boolean checkAccount(String email, String password) {
		String sql = "SELECT * FROM users WHERE email = ? AND password = ?";
		try {
			
			java.sql.PreparedStatement pst = connect.prepareStatement(sql);
			pst.setString(1, email);
			pst.setString(2, password);
			java.sql.ResultSet rs = pst.executeQuery();
			if (rs.next()) {
				return true;
			}
			pst.close();
			connect.close();
		} catch (SQLException e) {
			System.out.println("Error: " + e);
		}
		return false;
	}
	public static void deleteUser(int id) {
		String sql = "DELETE FROM users WHERE id = ?";
		try {
			
			java.sql.PreparedStatement pst = connect.prepareStatement(sql);
			pst.setInt(1, id);
			pst.executeUpdate();
			pst.close();
			connect.close();
		} catch (SQLException e) {
			System.out.println("Error: " + e);
		}
	}
	public static void updateUser(int id, User user) {
		String sql = "UPDATE users SET name = ?, password = ?, email = ?, phone = ?, address = ?, role = ? WHERE id = ?";
		try {
			java.sql.PreparedStatement pst = connect.prepareStatement(sql);
			pst.setString(1, user.getName());
			pst.setString(2, user.getPassword());
			pst.setString(3, user.getEmail());
			pst.setString(4, user.getPhone());
			pst.setString(5, user.getAddress());
			pst.setString(6, user.getRole());
			pst.setInt(7, id);
			pst.executeUpdate();
			pst.close();
			connect.close();
		} catch (SQLException e) {
			System.out.println("Error: " + e);
		}
	}
	public static ArrayList<User> getListUser() {
		ArrayList<User> list = new ArrayList<User>();
		String sql = "SELECT * FROM users";
		try {
			java.sql.PreparedStatement pst = connect.prepareStatement(sql);
			java.sql.ResultSet rs = pst.executeQuery();
			while (rs.next()) {
				User user = new User();
				user.setId(rs.getInt("id"));
				user.setName(rs.getString("name"));
				user.setPassword(rs.getString("password"));
				user.setEmail(rs.getString("email"));
				user.setPhone(rs.getString("phone"));
				user.setAddress(rs.getString("address"));
				user.setRole(rs.getString("role"));
				list.add(user);
			}
			pst.close();
			connect.close();
		} catch (SQLException e) {
			System.out.println("Error: " + e);
		}
		return list;
	}
	public static boolean checkLogin(String email, String password) {
		String sql = "SELECT * FROM users WHERE email = ? AND password = ?";
		try {
			java.sql.PreparedStatement pst = connect.prepareStatement(sql);
			pst.setString(1, email);
			pst.setString(2, password);
			java.sql.ResultSet rs = pst.executeQuery();
			if (rs.next()) {
				return true;
			}
			pst.close();
			connect.close();
		} catch (SQLException e) {
			System.out.println("Error: " + e);
		}
		return false;
	}
	public static User searchUser(String email) {
		String sql = "SELECT * FROM users WHERE email = ?";
		try {
			java.sql.PreparedStatement pst = connect.prepareStatement(sql);
			pst.setString(1, email);
			java.sql.ResultSet rs = pst.executeQuery();
			if (rs.next()) {
				User user = new User();
				user.setId(rs.getInt("id"));
				user.setName(rs.getString("name"));
				user.setPassword(rs.getString("password"));
				user.setEmail(rs.getString("email"));
				user.setPhone(rs.getString("phone"));
				user.setAddress(rs.getString("address"));
				user.setRole(rs.getString("role"));
				return user;
			}
			pst.close();
			connect.close();
		} catch (SQLException e) {
			System.out.println("Error: " + e);
		}
		return null;
	}
	public static User FindUserById(int id) {
		String sql = "SELECT * FROM users WHERE id = ?";
		try {
			java.sql.PreparedStatement pst = connect.prepareStatement(sql);
			pst.setInt(1, id);
			java.sql.ResultSet rs = pst.executeQuery();
			if (rs.next()) {
				User user = new User();
				user.setId(rs.getInt("id"));
				user.setName(rs.getString("name"));
				user.setPassword(rs.getString("password"));
				user.setEmail(rs.getString("email"));
				user.setPhone(rs.getString("phone"));
				user.setAddress(rs.getString("address"));
				user.setRole(rs.getString("role"));
				return user;
			}
			pst.close();
			connect.close();
		} catch (SQLException e) {
			System.out.println("Error: " + e);
		}
		return null;
	}
	public static void main(String[] args) {
		deleteUser(1);
	}
} 
